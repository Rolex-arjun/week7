import { useState } from 'react';

function FormValidation() {
  const [formData, setFormData] = useState({ name: '', email: '', agree: false });
  const [errors, setErrors] = useState({});

  const handleChange = (e) => {
    const { name, value, type, checked } = e.target;
    setFormData({
      ...formData,
      [name]: type === 'checkbox' ? checked : value,
    });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    const newErrors = {};

    if (!formData.name) newErrors.name = "Name is required";
    if (!formData.email) newErrors.email = "Email is required";
    if (!formData.agree) newErrors.agree = "You must agree to terms";

    setErrors(newErrors);

    if (Object.keys(newErrors).length === 0) {
      alert("Form submitted successfully");
      // Proceed with form submission logic here
    }
  };

  return (
    <form onSubmit={handleSubmit}>
      <div>
        <label>Name: </label>
        <input 
          type="text" 
          name="name" 
          value={formData.name} 
          onChange={handleChange} 
        />
        {errors.name && <p style={{ color: 'red' }}>{errors.name}</p>}
      </div>
      <div>
        <label>Email: </label>
        <input 
          type="email" 
          name="email" 
          value={formData.email} 
          onChange={handleChange} 
        />
        {errors.email && <p style={{ color: 'red' }}>{errors.email}</p>}
      </div>
      <div>
        <label>
          <input 
            type="checkbox" 
            name="agree" 
            checked={formData.agree} 
            onChange={handleChange} 
          />
          I agree to the terms
        </label>
        {errors.agree && <p style={{ color: 'red' }}>{errors.agree}</p>}
      </div>
      <button type="submit">Submit</button>
    </form>
  );
}

export default FormValidation;
